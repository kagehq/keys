name: Kage Keys CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build
      run: npm run build

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: actions/dependency-review-action@v3
    
    - name: Run SAST scan
      uses: github/codeql-action/analyze@v2
      with:
        languages: javascript

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Add your deployment commands here
    
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # Add your deployment commands here

  # Kage Keys specific: Generate one-time agent tokens
  generate-tokens:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Kage Keys
      run: npm install @kagehq/keys
    
    - name: Generate agent token
      run: |
        node -e "
        const { createToken } = require('@kagehq/keys');
        
        async function generateToken() {
          const token = await createToken(
            'github-actions',
            'github:repos.read,github:issues.read',
            3600, // 1 hour
            './audit.db'
          );
          console.log('Generated token:', token);
          console.log('::set-output name=agent-token::' + token);
        }
        
        generateToken();
        "
      id: token-generation
    
    - name: Use agent token
      run: |
        echo "Agent token generated successfully"
        echo "Token: ${{ steps.token-generation.outputs.agent-token }}"
        # Use this token for authenticated GitHub operations
